@page "/income"
@using System.Text.Json

<h3>Add Income</h3>

<NavLink href="/transaction"><button>Back</button></NavLink> @* to navigate to transaction page *@

<EditForm Model="transaction" OnValidSubmit="AddIncome">
    <div class="form-group">
        <label for="amount">Amount:</label>
        <InputNumber @bind-Value="transaction.Amount" id="amount" />
    </div>
    <div class="form-group">
        <label for="date">Date of Transaction:</label>
        <InputDate @bind-Value="transaction.DoT" id="date" />
    </div>
    <div class="form-group">
        <label for="category">Category:</label>
        <InputSelect @bind-Value="transaction.Category" id="category">
            <option value="Salary">Salary</option>
            <option value="Business">Business</option>
            <option value="Others">Others</option>
        </InputSelect>
    </div>
    <div class="form-group">
        <label for="tags">Tags:</label>
        <InputText @bind-Value="transaction.Tags" id="tags" />
    </div>
    <div class="form-group">
        <label for="note">Note:</label>
        <InputText @bind-Value="transaction.Note" id="note" />
    </div>
    <button type="submit" class="btn btn-primary">Add Income</button>
</EditForm>

@code {
    //object to hold the current income data being entered
    private Transaction transaction = new Transaction();

    //list to store all income transactions loaded from or saved to the file
    private List<Transaction> transactions = new List<Transaction>();

    //method to add a new income transaction to the list and save to file
    private void AddIncome()
    {
        transactions.Add(transaction);
        transaction = new Transaction(); //clear the form after adding income
        SaveTransactionsToFile();
    }

    //method to save the list of income transactions to a JSON file
    private void SaveTransactionsToFile()
    {
        var path = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments), "transactions.json");
        var json = JsonSerializer.Serialize(transactions);
        File.WriteAllText(path, json);
    }

    //load income transactions from the JSON file on component initialization
    protected override void OnInitialized()
    {
        var path = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments), "transactions.json");
        if (File.Exists(path))
        {
            var json = File.ReadAllText(path);
            transactions = JsonSerializer.Deserialize<List<Transaction>>(json) ?? new List<Transaction>();
        }
    }

    public class Transaction
    {
        public int Amount { get; set; }
        public DateTime DoT { get; set; }
        public string Category { get; set; }
        public string Tags { get; set; }
        public string Note { get; set; }
    }
}