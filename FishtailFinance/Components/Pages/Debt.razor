@page "/debt"
@using System.Text.Json
@using System.Linq

<h3>Debts</h3>
<NavLink href="/transaction"><button>Back</button></NavLink>

<h3>Add Debt</h3>

<EditForm Model="debt" OnValidSubmit="AddDebt">
    <div class="form-group">
        <label for="amount">Amount:</label>
        <InputNumber @bind-Value="debt.Amount" id="amount" />
    </div>
    <div class="form-group">
        <label for="date">Date of Debt:</label>
        <InputDate @bind-Value="debt.DoD" id="date" />
    </div>
    <div class="form-group">
        <label for="creditor">Creditor:</label>
        <InputText @bind-Value="debt.Creditor" id="creditor" />
    </div>
    <div class="form-group">
        <label for="interestRate">Interest Rate (optional):</label>
        <InputNumber @bind-Value="debt.InterestRate" id="interestRate" />
    </div>
    <div class="form-group">
        <label for="dueDate">Due Date:</label>
        <InputDate @bind-Value="debt.DueDate" id="dueDate" />
    </div>
    <div class="form-group">
        <label for="note">Note:</label>
        <InputText @bind-Value="debt.Note" id="note" />
    </div>
    <button type="submit" class="btn btn-primary">Add Debt</button>
</EditForm>

@if (debts != null && debts.Count > 0)
{
    <h3>Debt History</h3>
    <table>
        <thead>
            <tr>
                <th>Amount</th>
                <th>Date of Debt</th>
                <th>Creditor</th>
                <th>Interest Rate</th>
                <th>Due Date</th>
                <th>Note</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var debt in debts)
            {
                <tr>
                    <td>@debt.Amount</td>
                    <td>@debt.DoD.ToString("yyyy-mm-dd")</td>
                    <td>@debt.Creditor</td>
                    <td>@debt.InterestRate.ToString("P")</td>
                    <td>@debt.DueDate.ToString("yyyy-mm-dd")</td>
                    <td>@debt.Note</td>
                    <td>
                        <button class="btn btn-payoff" @onclick="() => ClearDebt(debt)">Pay Off</button> @* this button helps to clear the debts *@
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Debts debt = new Debts();

    private List<Debts> debts = new List<Debts>();

    private void AddDebt()
    {
        debts.Add(debt);
        debt = new Debts();
        SaveDebtsToFile();
    }

    private void ClearDebt(Debts debtToClear)
    {
        debts.Remove(debtToClear);
        SaveDebtsToFile();
    }

    private void SaveDebtsToFile()
    {
        var path = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments), "debts.json");
        var json = JsonSerializer.Serialize(debts);
        File.WriteAllText(path, json);
    }

    protected override void OnInitialized()
    {
        var path = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments), "debts.json");
        if (File.Exists(path))
        {
            var json = File.ReadAllText(path);
            debts = JsonSerializer.Deserialize<List<Debts>>(json) ?? new List<Debts>();
        }
    }

    public class Debts
    {
        public int Amount { get; set; }
        public DateTime DoD { get; set; }
        public string Creditor { get; set; }
        public decimal InterestRate { get; set; }
        public DateTime DueDate { get; set; }
        public string Note { get; set; }
    }
}